version: '3.8'
services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
    develop:
      watch:
        - action: sync
          path: ./src
          target: /app/src
          ignore:
            - node_modules
        - action: rebuild
          path: package.json
    depends_on:
      - db
      - rabbitmq
    environment:
      - MYSQL_HOST=db
      - MYSQL_PORT=3306
      - MYSQL_USER=root
      - MYSQL_PASSWORD=secret
      - MYSQL_DATABASE=test
    ports:
      - '3000:3000'
    networks:
      - app-network

  phpmyadmin:
    depends_on:
      - db
    image: phpmyadmin
    ports:
      - '8080:80'
    environment:
      - PMA_HOST=db
      - MYSQL_ROOT_PASSWORD=secret
    networks:
      - app-network

  db:
    container_name: mysql-db
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=secret
      - MYSQL_DATABASE=test
      - MYSQL_USER=secret
      - MYSQL_PASSWORD=secret
    ports:
      - '3306:3306'
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - app-network
    command: --default-authentication-plugin=mysql_native_password

  redis:
    container_name: redis-cache
    image: redis:alpine
    ports:
      - '6379:6379'
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    healthcheck:
      test: ['CMD', 'rabbitmq-diagnostics', 'check_port_connectivity']
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - '5672:5672'
      - '15672:15672' # Management console
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - app-network
  grafana:
    image: grafana/grafana
    ports:
      - '3001:3001'
    networks:
      - app-network
volumes:
  db-data:
    driver: local
networks:
  app-network:
    driver: bridge
